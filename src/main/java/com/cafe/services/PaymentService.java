package main.java.com.cafe.services;

import main.java.com.cafe.exceptions.PaymentFailedException;
import main.java.com.cafe.model.Cafe;
import main.java.com.cafe.model.Order;

public class PaymentService {
    // ‡∏•‡∏ö Discountable ‡∏≠‡∏≠‡∏Å ‡πÄ‡∏û‡∏£‡∏≤‡∏∞ Order ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß

    // ‡πÄ‡∏û‡∏¥‡πà‡∏° constructor ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏£‡∏±‡∏ö‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ Main.java ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ
    public PaymentService() {
    }

    public void processPayment(double paidAmount, double totalAmount, Order order, Cafe cafe) throws PaymentFailedException {
        if (paidAmount < totalAmount) {
            throw new PaymentFailedException("Insufficient payment. You need to pay at least " + totalAmount + "‡∏ø.");
        }

        double change = paidAmount - totalAmount;
        System.out.println("‚úÖ Payment of " + paidAmount + "‡∏ø accepted.");

        if (change > 0) {
            System.out.println("üí∞ Change: " + change + "‡∏ø");
        }

        // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Stock ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
        order.updateStock(cafe, true);
    }
}